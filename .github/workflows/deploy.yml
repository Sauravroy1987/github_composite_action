name: Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    permissions:
      actions: read
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & cache dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps # Reference to custom action.yml, Reference to other repository action <Repository Owner>/<Action name>
        with:
          caching: "true"
      - name: Output Information
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    environment: ITT
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deploy-s3-javascript
        env:
          # AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY are keywords to authenticate AWS account before accessing S3 bucket
          # These value will use by custom action automatically to authenticate
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: github-custom-action-hosting-saurav # Bucket Name
          bucket-region: eu-north-1 # Region where bucket addedd
          dist-folder: ./dist # folder where artifacts stored
      - name: Output Information
        run: |
          echo "Live URL: ${{ steps.deploy.outputs.website-url }}"
  # information:
  # runs-on: ubuntu-latest
  # steps:
  # - name: Get Code
  # uses: actions/checkout@v4
  # - name: Run custom action
  # uses: ./.github/actions/deploy-s3-javascript
